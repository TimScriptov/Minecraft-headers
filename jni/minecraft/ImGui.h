/***
 *	MCPE 1.13.0.1
 ***/
#pragma once

#include "std.h"

class ImVec2;
class ImGuiContext;
class ImGuiWindow;
class ImVec4;
class ImRect;
class ImFontAtlas;
class ImFont;
class ImGuiStorage;
class ImGuiStyle;
class ImGuiInputReadMode;
class ImDrawList;
class ImGuiPopupPositionPolicy;
class ImGuiAxis;
class ImGuiPlotType;

class ImGui
{
public:
	//char filler_ImGui[UNKNOW_SIZE];
public:
	void BeginChild(char const*, ImVec2 const&, bool, int);
	void BeginChild(unsigned int, ImVec2 const&, bool, int);
	void BeginGroup();
	void BeginPopup(char const*, int);
	void BulletText(char const*, ...);
	void ClosePopup(unsigned int);
	void EndColumns();
	void EndTooltip();
	void GetScrollX();
	void GetScrollY();
	void GetVersion();
	void Initialize(ImGuiContext*);
	void LogButtons();
	void NextColumn();
	void RenderText(ImVec2, char const*, char const*, bool);
	void Selectable(char const*, bool, int, ImVec2 const&);
	void SetFocusID(unsigned int, ImGuiWindow*);
	void SetScrollX(float);
	void SetScrollY(float);
	void SetTooltip(char const*, ...);
	void CloseButton(unsigned int, ImVec2 const&, float);
	void FocusWindow(ImGuiWindow*);
	void GetColorU32(ImVec4 const&);
	void GetColorU32(int, float);
	void GetColorU32(unsigned int);
	void GetDrawData();
	void GetFontSize();
	void GetKeyIndex(int);
	void GetMousePos();
	void IsClippedEx(ImRect const&, unsigned int, bool);
	void IsMouseDown(int);
	void IsPopupOpen(char const*);
	void IsPopupOpen(unsigned int);
	void KeepAliveID(unsigned int);
	void OpenPopupEx(unsigned int);
	void PopClipRect();
	void PopItemFlag();
	void PopStyleVar(int);
	void RenderArrow(ImVec2, int, float);
	void RenderFrame(ImVec2, ImVec2, unsigned int, bool, float);
	void SetActiveID(unsigned int, ImGuiWindow*);
	void SetTooltipV(char const*, std::__va_list);
	void TextColored(ImVec4 const&, char const*, ...);
	void ActivateItem(unsigned int);
	void BeginColumns(char const*, int, int);
	void BeginPopupEx(unsigned int, int);
	void BeginTooltip();
	void CalcItemSize(ImVec2, float, float);
	void CalcTextSize(char const*, char const*, bool, float);
	void GetCursorPos();
	void GetHoveredID();
	void GetWindowPos();
	void IsItemActive();
	void IsItemEdited();
	void IsKeyPressed(int, bool);
	void PopItemWidth();
	void PushClipRect(ImVec2 const&, ImVec2 const&, bool);
	void PushItemFlag(int, bool);
	void PushStyleVar(int, ImVec2 const&);
	void PushStyleVar(int, float);
	void RenderBullet(ImVec2);
	void SetCursorPos(ImVec2 const&);
	void SetHoveredID(unsigned int);
	void SetWindowPos(char const*, ImVec2 const&, int);
	void SetWindowPos(ImVec2 const&, int);
	void CalcItemWidth();
	void ClearActiveID();
	void ClearDragDrop();
	void CreateContext(ImFontAtlas*);
	void EndChildFrame();
	void GetCursorPosX();
	void GetCursorPosY();
	void GetFrameCount();
	void GetScrollMaxX();
	void GetScrollMaxY();
	void GetWindowSize();
	void IsItemClicked(int);
	void IsItemFocused();
	void IsItemHovered(int);
	void IsItemVisible();
	void IsKeyReleased(int);
	void IsRectVisible(ImVec2 const&);
	void IsRectVisible(ImVec2 const&, ImVec2 const&);
	void ItemHoverable(ImRect const&, unsigned int);
	void NavInitWindow(ImGuiWindow*, bool);
	void PopStyleColor(int);
	void PushItemWidth(float);
	void SetCursorPosX(float);
	void SetCursorPosY(float);
	void SetWindowSize(char const*, ImVec2 const&, int);
	void SetWindowSize(ImVec2 const&, int);
	void BeginTooltipEx(int, bool);
	void ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int);
	void CollapseButton(unsigned int, ImVec2 const&);
	void DestroyContext(ImGuiContext*);
	void FindWindowByID(unsigned int);
	void GetColumnIndex();
	void GetColumnWidth(int);
	void GetFrameHeight();
	void GetItemRectMax();
	void GetItemRectMin();
	void GetMouseCursor();
	void GetWindowWidth();
	void IsAnyMouseDown();
	void IsMouseClicked(int, bool);
	void LogToClipboard(int);
	void MarkItemEdited(unsigned int);
	void PopTextWrapPos();
	void PushStyleColor(int, ImVec4 const&);
	void PushStyleColor(int, unsigned int);
	void SetColumnWidth(int, float);
	void SetCurrentFont(ImFont*);
	void SetMouseCursor(int);
	void SetScrollHereY(float);
	void SetWindowFocus(char const*);
	void SetWindowFocus();
	void BeginChildFrame(unsigned int, ImVec2 const&, int);
	void BeginPopupModal(char const*, bool*, int);
	void GetColumnOffset(int);
	void GetColumnsCount();
	void GetItemRectSize();
	void GetStateStorage();
	void GetWindowHeight();
	void IsAnyItemActive();
	void IsMouseDragging(int, float);
	void IsMousePosValid(ImVec2 const*);
	void IsMouseReleased(int);
	void IsWindowChildOf(ImGuiWindow*, ImGuiWindow*);
	void IsWindowFocused(int);
	void IsWindowHovered(int);
	void LogRenderedText(ImVec2 const*, char const*, char const*);
	void PopButtonRepeat();
	void PushTextWrapPos(float);
	void RenderCheckMark(ImVec2, unsigned int, float);
	void SetColumnOffset(int, float);
	void SetStateStorage(ImGuiStorage*);
	void StyleColorsDark(ImGuiStyle*);
	void CalcListClipping(int, float, int*, int*);
	void FindWindowByName(char const*);
	void GetClipboardText();
	void IsAnyItemFocused();
	void IsAnyItemHovered();
	void PushButtonRepeat(bool);
	void SetClipboardText(char const*);
	void SetNextWindowPos(ImVec2 const&, int, ImVec2 const&);
	void SetWindowScrollX(ImGuiWindow*, float);
	void SetWindowScrollY(ImGuiWindow*, float);
	void CloseCurrentPopup();
	void ClosePopupToLevel(int);
	void EndDragDropSource();
	void EndDragDropTarget();
	void GetCurrentContext();
	void GetCursorStartPos();
	void GetMouseDragDelta(int, float);
	void GetNavInputAmount(int, ImGuiInputReadMode);
	void GetStyleColorName(int);
	void GetStyleColorVec4(int);
	void GetTextLineHeight();
	void GetWindowDrawList();
	void IsItemDeactivated();
	void IsWindowAppearing();
	void IsWindowCollapsed();
	void RenderFrameBorder(ImVec2, ImVec2, float);
	void RenderMouseCursor(ImDrawList*, ImVec2, float, int);
	void RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*);
	void RenderTextWrapped(ImVec2, char const*, char const*, float);
	void SetCurrentContext(ImGuiContext*);
	void SetNextWindowSize(ImVec2 const&, int);
	void SetScrollFromPosY(float, float);
	void ShowMetricsWindow(bool*);
	void FindWindowSettings(unsigned int);
	void GetCursorScreenPos();
	void GetDragDropPayload();
	void GetOverlayDrawList();
	void PushColumnClipRect(int);
	void RenderNavHighlight(ImRect const&, unsigned int, int);
	void SetCursorScreenPos(ImVec2 const&);
	void SetDragDropPayload(char const*, void const*, unsigned int, int);
	void SetNextWindowFocus();
	void SetWindowCollapsed(char const*, bool, int);
	void SetWindowCollapsed(bool, int);
	void SetWindowFontScale(float);
	void BeginDragDropSource(int);
	void BeginDragDropTarget();
	void CalcWrapWidthForPos(ImVec2 const&, float);
	void CaptureMouseFromApp(bool);
	void FindRenderedTextEnd(char const*, char const*);
	void FindSettingsHandler(char const*);
	void GetContentRegionMax();
	void GetKeyPressedAmount(int, float, float);
	void GetNavInputAmount2d(int, ImGuiInputReadMode, float, float);
	void GetWindowScrollMaxX(ImGuiWindow*);
	void GetWindowScrollMaxY(ImGuiWindow*);
	void IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool);
	void ResetMouseDragDelta(int);
	void SetItemAllowOverlap();
	void SetItemDefaultFocus();
	void SetNavIDWithRectRel(unsigned int, int, ImRect const&);
	void ColorConvertHSVtoRGB(float, float, float, float&, float&, float&);
	void ColorConvertRGBtoHSV(float, float, float, float&, float&, float&);
	void IsMouseDoubleClicked(int);
	void IsWindowNavFocusable(ImGuiWindow*);
	void MarkIniSettingsDirty(ImGuiWindow*);
	void MarkIniSettingsDirty();
	void NavMoveRequestCancel();
	void OpenPopupOnItemClick(char const*, int);
	void PushMultiItemsWidths(int, float);
	void SetKeyboardFocusHere(int);
	void SetNextWindowBgAlpha(float);
	void AcceptDragDropPayload(char const*, int);
	void BeginPopupContextItem(char const*, int);
	void BeginPopupContextVoid(char const*, int);
	void ClosePopupsOverWindow(ImGuiWindow*);
	void FocusableItemRegister(ImGuiWindow*, unsigned int, bool);
	void GetContentRegionAvail();
	void GetDrawListSharedData();
	void NavMoveRequestForward(int, int, ImRect const&, int);
	void PopAllowKeyboardFocus();
	void SaveIniSettingsToDisk(char const*);
	void SetAllocatorFunctions(void* (*)(unsigned int, void*), void (*)(void*, void*), void*);
	void CalcWindowExpectedSize(ImGuiWindow*);
	void CaptureKeyboardFromApp(bool);
	void GetFontTexUvWhitePixel();
	void GetFrontMostPopupModal();
	void PushAllowKeyboardFocus(bool);
	void SetNextWindowCollapsed(bool, int);
	void StartMouseMovingWindow(ImGuiWindow*);
	void BeginPopupContextWindow(char const*, int, bool);
	void BringWindowToFocusFront(ImGuiWindow*);
	void ColorConvertFloat4ToU32(ImVec4 const&);
	void ColorConvertU32ToFloat4(unsigned int);
	void CreateNewWindowSettings(char const*);
	void FocusableItemUnregister(ImGuiWindow*);
	void LoadIniSettingsFromDisk(char const*);
	void SaveIniSettingsToMemory(unsigned int*);
	void UpdateMouseMovingWindow();
	void BringWindowToDisplayBack(ImGuiWindow*);
	void SetNextWindowContentSize(ImVec2 const&);
	void BeginDragDropTargetCustom(ImRect const&, unsigned int);
	void BringWindowToDisplayFront(ImGuiWindow*);
	void FindBestWindowPosForPopup(ImGuiWindow*);
	void GetFrameHeightWithSpacing();
	void GetWindowContentRegionMax();
	void GetWindowContentRegionMin();
	void LoadIniSettingsFromMemory(char const*, unsigned int);
	void NavMoveRequestTryWrapping(ImGuiWindow*, int);
	void GetContentRegionAvailWidth();
	void GetWindowAllowedExtentRect(ImGuiWindow*);
	void IsItemDeactivatedAfterEdit();
	void FindBestWindowPosForPopupEx(ImVec2 const&, ImVec2 const&, int*, ImRect const&, ImRect const&, ImGuiPopupPositionPolicy);
	void GetWindowContentRegionWidth();
	void GetTextLineHeightWithSpacing();
	void NavMoveRequestButNoResultYet();
	//void SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeCallbackData*), void*);
	void DebugCheckVersionAndDataLayout(char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
	void FocusPreviousWindowIgnoringOne(ImGuiWindow*);
	void IsDragDropPayloadBeingAccepted();
	void UpdateWindowParentAndRootLinks(ImGuiWindow*, int, ImGuiWindow*);
	void CalcTypematicPressedRepeatAmount(float, float, float, float);
	void GetMousePosOnOpeningCurrentPopup();
	void UpdateHoveredWindowAndCaptureFlags();
	void End();
	void Text(char const*, ...);
	void Begin(char const*, bool*, ImVec2 const&, float, int);
	void Begin(char const*, bool*, int);
	void GetID(char const*);
	void GetID(char const*, char const*);
	void GetID(void const*);
	void GetIO();
	void PopID();
	void TextV(char const*, std::__va_list);
	void Button(char const*, ImVec2 const&);
	void Indent(float);
	void PushID(char const*);
	void PushID(char const*, char const*);
	void PushID(void const*);
	void PushID(int);
	void Render();
	void Columns(int, char const*, bool);
	void GetFont();
	void GetTime();
	void ItemAdd(ImRect const&, unsigned int, ImRect const*);
	void LogText(char const*, ...);
	void MemFree(void*);
	void PopFont();
	void TreePop();
	void Checkbox(char const*, bool*);
	void EndChild();
	void EndFrame();
	void EndGroup();
	void EndPopup();
	void GetStyle();
	void ItemSize(ImRect const&, float);
	void ItemSize(ImVec2 const&, float);
	void LogToTTY(int);
	void MemAlloc(unsigned int);
	void NewFrame();
	void PushFont(ImFont*);
	void SameLine(float, float);
	void SetNavID(unsigned int, int);
	void Shutdown(ImGuiContext*);
	void TreeNode(char const*);
	void TreeNode(char const*, char const*, ...);
	void TreeNode(void const*, char const*, ...);
	void Unindent(float);
	//void InputText(char const*, char*, unsigned int, int, int (*)(ImGuiInputTextCallbackData*), void*);
	void IsKeyDown(int);
	void LogFinish();
	void LogToFile(int, char const*);
	void OpenPopup(char const*);
	void Scrollbar(int);
	void Separator();
	void SliderInt(char const*, int*, int, int, char const*);
	void BeginCombo(char const*, char const*, int);
	void ColorEdit3(char const*, float*, int);
	void ColorEdit4(char const*, float*, int);
	void DragFloat2(char const*, float*, float, float, float, char const*, float);
	void DragFloat3(char const*, float*, float, float, float, char const*, float);
	void DragFloat4(char const*, float*, float, float, float, char const*, float);
	void DragScalar(char const*, int, void*, float, void const*, void const*, char const*, float);
	void EndMenuBar();
	void InputFloat(char const*, float*, float, float, char const*, int);
	void Selectable(char const*, bool*, int, ImVec2 const&);
	void SliderInt2(char const*, int*, int, int, char const*);
	void SliderInt3(char const*, int*, int, int, char const*);
	void SliderInt4(char const*, int*, int, int, char const*);
	void TreeNodeEx(char const*, int, char const*, ...);
	void TreeNodeEx(void const*, int, char const*, ...);
	void VSliderInt(char const*, ImVec2 const&, int*, int, int, char const*);
	void ArrowButton(char const*, int);
	void ColorButton(char const*, ImVec4 const&, int, ImVec2);
	void ImageButton(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, int, ImVec4 const&, ImVec4 const&);
	void InputDouble(char const*, double*, double, double, char const*, int);
	void InputFloat2(char const*, float*, char const*, int);
	void InputFloat3(char const*, float*, char const*, int);
	void InputFloat4(char const*, float*, char const*, int);
	void InputScalar(char const*, int, void*, void const*, void const*, char const*, int);
	void ProgressBar(float, ImVec2 const&, char const*);
	void RadioButton(char const*, int*, int);
	void RadioButton(char const*, bool);
	void SliderAngle(char const*, float*, float, float, char const*);
	void SliderFloat(char const*, float*, float, float, char const*, float);
	void SmallButton(char const*);
	void TextWrapped(char const*, ...);
	void BeginMenuBar();
	void ColorPicker4(char const*, float*, int, float const*);
	void SliderFloat2(char const*, float*, float, float, char const*, float);
	void SliderFloat3(char const*, float*, float, float, char const*, float);
	void SliderFloat4(char const*, float*, float, float, char const*, float);
	void SliderScalar(char const*, int, void*, void const*, void const*, char const*, float);
	void TextDisabled(char const*, ...);
	void VSliderFloat(char const*, ImVec2 const&, float*, float, float, char const*, float);
	void CheckboxFlags(char const*, unsigned int*, unsigned int);
	void DragIntRange2(char const*, int*, int*, float, int, int, char const*, char const*);
	void ListBoxFooter();
	void ListBoxHeader(char const*, ImVec2 const&);
	void PlotHistogram(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2);
	void PlotHistogram(char const*, float const*, int, int, char const*, float, float, ImVec2, int);
	void ShowUserGuide();
	void EndMainMenuBar();
	void ShowDemoWindow(bool*);
	void DragFloatRange2(char const*, float*, float*, float, float, float, char const*, char const*, float);
	void InvisibleButton(char const*, ImVec2 const&);
	void ShowStyleEditor(ImGuiStyle*);
	void TextUnformatted(char const*, char const*);
	void BeginMainMenuBar();
	void CollapsingHeader(char const*, bool*, int);
	void CollapsingHeader(char const*, int);
	void ShowFontSelector(char const*);
	void StyleColorsLight(ImGuiStyle*);
	void ShowStyleSelector(char const*);
	//void InputTextMultiline(char const*, char*, unsigned int, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*);
	void StyleColorsClassic(ImGuiStyle*);
	void SetColorEditOptions(int);
	void AlignTextToFramePadding();
	void GetTreeNodeToLabelSpacing();
	void Combo(char const*, int*, bool (*)(void*, int, char const**), void*, int, int);
	void Combo(char const*, int*, char const* const*, int, int);
	void Combo(char const*, int*, char const*, int);
	void Dummy(ImVec2 const&);
	void Image(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec4 const&, ImVec4 const&);
	void Bullet();
	void DragInt(char const*, int*, float, int, int, char const*);
	void EndMenu();
	void ListBox(char const*, int*, char const* const*, int, int);
	void NewLine();
	void Spacing();
	void DragInt2(char const*, int*, float, int, int, char const*);
	void DragInt3(char const*, int*, float, int, int, char const*);
	void DragInt4(char const*, int*, float, int, int, char const*);
	void EndCombo();
	void InputInt(char const*, int*, int, int, int);
	void MenuItem(char const*, char const*, bool*, bool);
	void MenuItem(char const*, char const*, bool, bool);
	void BeginMenu(char const*, bool);
	void DragFloat(char const*, float*, float, float, float, char const*, float);
	void InputInt2(char const*, int*, int);
	void InputInt3(char const*, int*, int);
	void InputInt4(char const*, int*, int);
	void LabelText(char const*, char const*, ...);
	void PlotLines(char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2);
	void PlotLines(char const*, float const*, int, int, char const*, float, float, ImVec2, int);
	void ShadeVertsLinearUV(ImDrawList*, int, int, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, bool);
	void RenderArrowPointingAt(ImDrawList*, ImVec2, ImVec2, int, unsigned int);
	void RenderRectFilledRangeH(ImDrawList*, ImRect const&, unsigned int, float, float, float);
	void ShadeVertsLinearColorGradientKeepAlpha(ImDrawList*, int, int, ImVec2, ImVec2, unsigned int, unsigned int);
	void InputFloat(char const*, float*, float, float, int, int);
	void LabelTextV(char const*, char const*, std::__va_list);
	void TreeNodeEx(char const*, int);
	void BulletTextV(char const*, std::__va_list);
	void DragScalarN(char const*, int, void*, int, float, void const*, void const*, char const*, float);
	void InputFloat2(char const*, float*, int, int);
	void InputFloat3(char const*, float*, int, int);
	void InputFloat4(char const*, float*, int, int);
	//void InputTextEx(char const*, char*, int, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*);
	void TreeNodeExV(char const*, int, char const*, std::__va_list);
	void TreeNodeExV(void const*, int, char const*, std::__va_list);
	void ColorPicker3(char const*, float*, int);
	void ColorTooltip(char const*, float const*, int);
	void DragBehavior(unsigned int, int, void*, float, void const*, void const*, char const*, float, int);
	void InputScalarN(char const*, int, void*, int, void const*, void const*, char const*, int);
	void TextColoredV(ImVec4 const&, char const*, std::__va_list);
	void TextWrappedV(char const*, std::__va_list);
	void ArrowButtonEx(char const*, int, ImVec2, int);
	void ListBoxHeader(char const*, int, int);
	void SliderScalarN(char const*, int, void*, int, void const*, void const*, char const*, float);
	void TextDisabledV(char const*, std::__va_list);
	void TreePushRawID(unsigned int);
	void VSliderScalar(char const*, ImVec2 const&, int, void*, void const*, void const*, char const*, float);
	void SliderBehavior(ImRect const&, unsigned int, int, void*, void const*, void const*, char const*, float, int, ImRect*);
	void SplitterBehavior(ImRect const&, unsigned int, ImGuiAxis, float*, float*, float, float, float, float);
	void TreeNodeBehavior(unsigned int, int, char const*, char const*);
	void VerticalSeparator();
	void SetNextTreeNodeOpen(bool, int);
	void ColorEditOptionsPopup(float const*, int);
	void TreeAdvanceToLabelPos();
	void TreeNodeBehaviorIsOpen(unsigned int, int);
	void ColorPickerOptionsPopup(float const*, int);
	void InputScalarAsWidgetReplacement(ImRect const&, unsigned int, char const*, int, void*, char const*);
	void RenderColorRectWithAlphaCheckerboard(ImVec2, ImVec2, unsigned int, float, ImVec2, float, int);
	void Value(char const*, bool);
	void Value(char const*, float, char const*);
	void Value(char const*, int);
	void Value(char const*, unsigned int);
	void PlotEx(ImGuiPlotType, char const*, float (*)(void*, int), void*, int, int, char const*, float, float, ImVec2);
	void ListBox(char const*, int*, bool (*)(void*, int, char const**), void*, int, int);
	void ButtonEx(char const*, ImVec2 const&, int);
	void TreePush(char const*);
	void TreePush(void const*);
	void TreeNodeV(char const*, char const*, std::__va_list);
	void TreeNodeV(void const*, char const*, std::__va_list);
};
